{"version":3,"sources":["../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","views/OrderManagementList/components/Header/Header.js","views/OrderManagementList/components/Results/Results.js","views/OrderManagementList/OrderManagementList.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js"],"names":["_ref","React","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","props","ref","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","other","_objectWithoutProperties","theme","useTheme","_extends","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","classes","className","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","clsx","root","Toolbar","toolbar","spacer","length","Typography","variant","caption","id","Select","select","icon","selectIcon","input","InputBase","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","label","min","actions","title","withStyles","palette","text","primary","fontSize","typography","pxToRem","overflow","padding","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","name","useStyles","makeStyles","Header","rest","Grid","alignItems","container","justify","spacing","item","gutterBottom","Button","filterButton","content","inner","minWidth","justifyContent","Results","orders","useState","selectedOrders","setSelectedOrders","setPage","setRowsPerPage","paymentStatusColors","canceled","colors","grey","pending","orange","completed","green","rejected","red","Card","CardHeader","action","Divider","CardContent","Table","TableHead","TableRow","Checkbox","checked","indeterminate","target","order","align","TableBody","slice","selected","indexOf","selectedIndex","newSelectedOrders","handleSelectOne","payment","moment","created_at","format","customer","method","currency","total","status","RouterLink","size","CardActions","defaultProps","results","marginTop","OrderManagementList","setOrders","useEffect","mounted","axios","get","then","response","data","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","_props$checkedIcon","checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","SwitchBase","type","capitalize","undefined","secondary","colorPrimary","main","backgroundColor","fade","hoverOpacity","colorSecondary"],"mappings":"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","file":"static/js/17.ab772304.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Orders\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Add order\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, GenericMoreButton, TableEditBar } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Orders\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedOrders.length === orders.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedOrders.length > 0 &&\n                          selectedOrders.length < orders.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell>\n                    <TableCell>Ref</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell>Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(0, rowsPerPage).map(order => (\n                    <TableRow\n                      key={order.id}\n                      selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={selectedOrders.indexOf(order.id) !== -1}\n                          color=\"primary\"\n                          onChange={event => handleSelectOne(event, order.id)}\n                          value={selectedOrders.indexOf(order.id) !== -1}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {order.payment.ref}\n                        <Typography variant=\"body2\">\n                          {moment(order.created_at).format(\n                            'DD MMM YYYY | hh:mm'\n                          )}\n                        </Typography>\n                      </TableCell>\n\n                      <TableCell>{order.customer.name}</TableCell>\n                      <TableCell>{order.payment.method}</TableCell>\n                      <TableCell>\n                        {order.payment.currency}\n                        {order.payment.total}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={paymentStatusColors[order.payment.status]}\n                          variant=\"outlined\"\n                        >\n                          {order.payment.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/orders/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedOrders} />\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport { Page, SearchBar } from 'components';\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  results: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst OrderManagementList = () => {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchOrders = () => {\n      axios.get('/api/orders').then(response => {\n        if (mounted) {\n          setOrders(response.data.orders);\n        }\n      });\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Orders Management List\"\n    >\n      <Header />\n      <SearchBar />\n      <Results\n        className={classes.results}\n        orders={orders} //\n      />\n    </Page>\n  );\n};\n\nexport default OrderManagementList;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');"],"sourceRoot":""}