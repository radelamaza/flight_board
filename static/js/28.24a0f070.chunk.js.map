{"version":3,"sources":["views/KanbanBoard/components/Header/Header.js","views/KanbanBoard/components/TaskList/TaskList.js","views/KanbanBoard/components/TaskListItem/TaskListItem.js","views/KanbanBoard/components/TaskDetails/TaskDetails.js","views/KanbanBoard/KanbanBoard.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","Header","props","onListAdd","className","rest","classes","clsx","Grid","alignItems","container","justify","item","Typography","component","gutterBottom","variant","Button","color","onClick","userSelect","whiteSpace","height","display","flexDirection","verticalAlign","width","margin","breakpoints","down","isDraggingOver","header","backgroundColor","palette","primary","main","contrastText","borderRadius","counter","marginLeft","headerAction","content","flexGrow","overflowY","inner","TaskList","title","total","provided","snapshot","children","ref","innerRef","Tooltip","IconButton","edge","options","suppressScrollX","outline","marginBottom","isDragging","paddingTop","stats","files","icon","comments","date","progress","marginTop","TaskListItem","task","onOpen","style","Card","draggableProps","dragHandleProps","CardHeader","action","subheader","subheaderTypographyProps","titleTypographyProps","CardContent","avatars","members","limit","moment","deadline","format","displayName","defaultProps","position","top","left","transform","boxShadow","shadows","maxWidth","TaskDetails","open","onClose","Modal","desc","overflowX","KanbanBoard","useState","lists","setLists","openedTask","setOpenedTask","useEffect","mounted","axios","get","then","response","data","list","push","items","tasks","forEach","id","uuid","onDragEnd","event","source","destination","newLists","_","clone","sourceList","find","droppableId","destinationList","splice","index","removedItem","map","key","length","draggableId","handleTaskOpen","placeholder","Boolean"],"mappings":"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","file":"static/js/28.24a0f070.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  }\n}));\n\nconst Header = props => {\n  const { onListAdd, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Organization\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Kanban Board\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            onClick={onListAdd}\n            variant=\"contained\"\n          >\n            Add list\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  onListAdd: PropTypes.func\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, IconButton, Tooltip } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    userSelect: 'none',\n    whiteSpace: 'normal',\n    height: '100%',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    verticalAlign: 'top',\n    width: 500,\n    padding: theme.spacing(0, 1),\n    margin: theme.spacing(0, 1),\n    [theme.breakpoints.down('xs')]: {\n      width: 300\n    }\n  },\n  isDraggingOver: {},\n  header: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(0.5, 2),\n    borderRadius: 4,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  counter: {\n    marginLeft: theme.spacing(1)\n  },\n  headerAction: {\n    marginLeft: 'auto'\n  },\n  content: {\n    flexGrow: 1,\n    overflowY: 'hidden'\n  },\n  inner: {\n    padding: theme.spacing(2, 3)\n  }\n}));\n\nconst TaskList = props => {\n  const {\n    title,\n    total,\n    provided,\n    snapshot,\n    className,\n    children,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n      ref={provided.innerRef}\n    >\n      <div className={classes.header}>\n        <Typography\n          color=\"inherit\"\n          variant=\"h5\"\n        >\n          {title}\n        </Typography>\n        <Typography\n          className={classes.counter}\n          color=\"inherit\"\n          variant=\"h6\"\n        >\n          - {total}\n        </Typography>\n        <div className={classes.headerAction}>\n          <Tooltip title=\"Add task\">\n            <IconButton\n              color=\"inherit\"\n              edge=\"end\"\n              variant=\"contained\"\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n      <div\n        className={clsx(classes.content, {\n          [classes.isDraggingOver]: snapshot.isDraggingOver\n        })}\n      >\n        <PerfectScrollbar options={{ suppressScrollX: true }}>\n          <div className={classes.inner}>{children}</div>\n        </PerfectScrollbar>\n      </div>\n    </div>\n  );\n};\n\nTaskList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  provided: PropTypes.object.isRequired,\n  snapshot: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  total: PropTypes.number\n};\n\nexport default TaskList;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport ChatIcon from '@material-ui/icons/Chat';\n\nimport { StackAvatars, GenericMoreButton } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    outline: 'none',\n    marginBottom: theme.spacing(2)\n  },\n  isDragging: {},\n  content: {\n    paddingTop: 0\n  },\n  stats: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  files: {\n    color: theme.palette.icon,\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  comments: {\n    color: theme.palette.icon,\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  date: {\n    marginLeft: theme.spacing(2)\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst TaskListItem = props => {\n  // eslint-disable-next-line no-unused-vars\n  const { task, onOpen, provided, snapshot, className, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      className={clsx(\n        classes.root,\n        {\n          [classes.isDragging]: snapshot.isDragging\n        },\n        className\n      )}\n      style={{ ...style, ...provided.draggableProps.style }}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        subheader={`#${task.ref}`}\n        subheaderTypographyProps={{ variant: 'overline' }}\n        title={task.title}\n        titleTypographyProps={{ variant: 'h5', gutterBottom: true }}\n      />\n      <CardContent className={classes.content}>\n        <div className={classes.stats}>\n          <StackAvatars\n            avatars={task.members}\n            limit={4}\n          />\n          {task.files > 0 && (\n            <div className={classes.files}>\n              <AttachFileIcon />\n            </div>\n          )}\n          {task.comments > 0 && (\n            <div className={classes.comments}>\n              <ChatIcon />\n            </div>\n          )}\n          <div className={classes.flexGrow} />\n          <Typography\n            className={classes.date}\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {moment(task.deadline).format('D MMM')}\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTaskListItem.displayName = 'TaskListItem';\n\nTaskListItem.propTypes = {\n  className: PropTypes.string,\n  onOpen: PropTypes.func.isRequired,\n  provided: PropTypes.object.isRequired,\n  snapshot: PropTypes.object.isRequired,\n  style: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nTaskListItem.defaultProps = {\n  style: {},\n  onOpen: () => {}\n};\n\nexport default TaskListItem;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Modal, Card, CardContent, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 360,\n    maxWidth: '100%'\n  }\n}));\n\nconst TaskDetails = props => {\n  const { open, onClose, task, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  // const mode = task ? 'edit' : 'create';\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal\n      onClose={onClose}\n      open={open}\n    >\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <CardContent>\n          <Typography variant=\"h6\">{task.title}</Typography>\n          <Typography variant=\"body1\">{task.desc}</Typography>\n        </CardContent>\n      </Card>\n    </Modal>\n  );\n};\n\nTaskDetails.displayName = 'TaskDetails';\n\nTaskDetails.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  task: PropTypes.any\n};\n\nTaskDetails.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default TaskDetails;\n","import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport _ from 'lodash';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport { Page } from 'components';\nimport { Header, TaskList, TaskListItem, TaskDetails } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0, 3, 3, 1),\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap'\n  }\n}));\n\nconst KanbanBoard = () => {\n  const classes = useStyles();\n  const [lists, setLists] = useState([]);\n  const [openedTask, setOpenedTask] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchData = () => {\n      axios.get('/api/kanban').then(response => {\n        if (mounted) {\n          const lists = [];\n\n          for (const list of response.data.lists) {\n            lists.push({ ...list, items: [] });\n          }\n\n          for (const task of response.data.tasks) {\n            lists.forEach(list => {\n              if (list.id === task.list) {\n                list.items.push(task);\n              }\n            });\n          }\n\n          setLists(lists);\n        }\n      });\n    };\n\n    fetchData();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleDragEnd = event => {\n    const { source, destination } = event;\n\n    if (!destination) {\n      return;\n    }\n\n    const newLists = _.clone(lists);\n    const sourceList = newLists.find(list => list.id === source.droppableId);\n    const destinationList = newLists.find(\n      list => list.id === destination.droppableId\n    );\n    const [removedItem] = sourceList.items.splice(source.index, 1);\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    } else {\n      removedItem.list = destination.droppableId;\n      destinationList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    }\n  };\n\n  const handleListAdd = () => {\n    const list = {\n      id: uuid(),\n      title: 'New list',\n      items: []\n    };\n\n    setLists(lists => [...lists, list]);\n  };\n\n  const handleTaskOpen = task => {\n    setOpenedTask(task);\n  };\n\n  const handleTaskClose = () => {\n    setOpenedTask(null);\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Kanban Board\"\n    >\n      <Header onListAdd={handleListAdd} />\n      <div className={classes.content}>\n        <DragDropContext onDragEnd={handleDragEnd}>\n          {lists.map(list => (\n            <Droppable\n              droppableId={list.id}\n              key={list.id}\n            >\n              {(provided, snapshot) => (\n                <TaskList\n                  provided={provided}\n                  snapshot={snapshot}\n                  title={list.title}\n                  total={list.items.length}\n                >\n                  {list.items.map((task, index) => (\n                    <Draggable\n                      draggableId={task.id}\n                      index={index}\n                      key={task.id}\n                    >\n                      {(provided, snapshot) => (\n                        <TaskListItem\n                          onOpen={() => handleTaskOpen(task)}\n                          provided={provided}\n                          snapshot={snapshot}\n                          task={task}\n                        />\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </TaskList>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n      </div>\n      <TaskDetails\n        onClose={handleTaskClose}\n        open={Boolean(openedTask)}\n        task={openedTask}\n      />\n    </Page>\n  );\n};\n\nexport default KanbanBoard;\n"],"sourceRoot":""}