{"version":3,"sources":["views/Calendar/components/AddEditEvent/AddEditEvent.js","views/Calendar/components/Toolbar/Toolbar.js","views/Calendar/Calendar.js"],"names":["useStyles","makeStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","field","marginTop","spacing","cancelButton","marginLeft","confirmButton","color","palette","white","backgroundColor","colors","green","AddEditEvent","forwardRef","props","ref","event","onDelete","onCancel","onAdd","onEdit","className","rest","classes","defaultEvent","title","desc","allDay","start","moment","toDate","end","useState","values","setValues","mode","handleFieldChange","e","persist","target","name","type","checked","value","Card","clsx","CardContent","Typography","align","gutterBottom","variant","TextField","fullWidth","label","onChange","FormControlLabel","control","Switch","defaultValue","format","disabled","Divider","CardActions","IconButton","edge","onClick","Button","id","uuid","Toolbar","date","view","onDatePrev","onDateNext","onEventAdd","onViewChange","onDateToday","viewOptions","icon","ViewConfigIcon","ViewWeekIcon","ViewDayIcon","ViewAgendaIcon","Grid","alignItems","container","justify","item","component","ButtonGroup","Hidden","smDown","map","viewOption","Icon","Tooltip","key","height","padding","borderColor","divider","grey","typography","body2","body1","h6","subtitle2","fontWeight","text","secondary","blueGrey","primary","main","contrastText","borderWidth","opacity","subtitle1","card","Calendar","calendarRef","useRef","useTheme","mobileDevice","useMediaQuery","breakpoints","down","setView","setDate","events","setEvents","open","eventModal","setEventModal","useEffect","mounted","axios","get","then","response","data","calendarApi","current","getApi","newView","changeView","handleModalClose","next","getDate","prev","today","allDayMaintainDuration","defaultDate","defaultView","droppable","editable","eventClick","info","selected","find","eventResizableFromStart","header","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","timelinePlugin","rerenderDelay","selectable","weekends","Modal","onClose","filter"],"mappings":"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","file":"static/js/21.3c00dca7.chunk.js","sourcesContent":["/* eslint-disable react/display-name */\nimport React, { useState, forwardRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  Divider,\n  FormControlLabel,\n  Switch,\n  colors\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  field: {\n    marginTop: theme.spacing(3)\n  },\n  cancelButton: {\n    marginLeft: 'auto'\n  },\n  confirmButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst AddEditEvent = forwardRef((props, ref) => {\n  const {\n    event,\n    onDelete,\n    onCancel,\n    onAdd,\n    onEdit,\n    className,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  const defaultEvent = {\n    title: 'Event title',\n    desc: 'Event description',\n    allDay: false,\n    start: moment().toDate(),\n    end: moment().toDate()\n  };\n\n  const [values, setValues] = useState(event || defaultEvent);\n\n  const mode = event ? 'edit' : 'add';\n\n  const handleFieldChange = e => {\n    e.persist();\n    setValues(values => ({\n      ...values,\n      [e.target.name]:\n        e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    }));\n  };\n\n  const handleDelete = () => {\n    onDelete && onDelete(event);\n  };\n\n  const handleAdd = () => {\n    if (!values.title || !values.desc) {\n      return;\n    }\n\n    onAdd({ ...values, id: uuid() });\n  };\n\n  const handleEdit = () => {\n    if (!values.title || !values.desc) {\n      return;\n    }\n\n    onEdit(values);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      ref={ref}\n    >\n      <form>\n        <CardContent>\n          <Typography\n            align=\"center\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {mode === 'add' ? 'Add Event' : 'Edit Event'}\n          </Typography>\n          <TextField\n            className={classes.field}\n            fullWidth\n            label=\"Title\"\n            name=\"title\"\n            onChange={handleFieldChange}\n            value={values.title}\n            variant=\"outlined\"\n          />\n          <TextField\n            className={classes.field}\n            fullWidth\n            label=\"Description\"\n            name=\"desc\"\n            onChange={handleFieldChange}\n            value={values.desc}\n            variant=\"outlined\"\n          />\n          <FormControlLabel\n            className={classes.field}\n            control={\n              <Switch\n                checked={values.allDay}\n                name=\"allDay\"\n                onChange={handleFieldChange}\n              />\n            }\n            label=\"All day\"\n          />\n          <TextField\n            className={classes.field}\n            defaultValue={moment(values.start).format('YYYY-MM-DDThh:mm:ss')}\n            fullWidth\n            label=\"Start date\"\n            name=\"start\"\n            onChange={handleFieldChange}\n            type=\"datetime-local\"\n            variant=\"outlined\"\n          />\n          <TextField\n            className={classes.field}\n            defaultValue={moment(values.end).format('YYYY-MM-DDThh:mm:ss')}\n            disabled={values.allDay}\n            fullWidth\n            label=\"End date\"\n            name=\"end\"\n            onChange={handleFieldChange}\n            type=\"datetime-local\"\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <IconButton\n            edge=\"start\"\n            onClick={handleDelete}\n          >\n            <DeleteIcon />\n          </IconButton>\n          <Button\n            className={classes.cancelButton}\n            onClick={onCancel}\n            variant=\"contained\"\n          >\n            Cancel\n          </Button>\n          {mode === 'add' ? (\n            <Button\n              className={classes.confirmButton}\n              onClick={handleAdd}\n              variant=\"contained\"\n            >\n              Add\n            </Button>\n          ) : (\n            <Button\n              className={classes.confirmButton}\n              onClick={handleEdit}\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          )}\n        </CardActions>\n      </form>\n    </Card>\n  );\n});\n\nAddEditEvent.propTypes = {\n  className: PropTypes.string,\n  event: PropTypes.object,\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func\n};\n\nexport default AddEditEvent;\n","import React from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid,\n  Hidden,\n  Typography,\n  Tooltip,\n  ButtonGroup,\n  IconButton,\n  Button\n} from '@material-ui/core';\nimport ViewConfigIcon from '@material-ui/icons/ViewComfyOutlined';\nimport ViewWeekIcon from '@material-ui/icons/ViewWeekOutlined';\nimport ViewDayIcon from '@material-ui/icons/ViewDayOutlined';\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgendaOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Toolbar = props => {\n  const {\n    date,\n    view,\n    onDatePrev,\n    onDateNext,\n    onEventAdd,\n    onViewChange,\n    onDateToday,\n    className,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  const viewOptions = [\n    {\n      label: 'Month',\n      value: 'dayGridMonth',\n      icon: ViewConfigIcon\n    },\n    {\n      label: 'Week',\n      value: 'timeGridWeek',\n      icon: ViewWeekIcon\n    },\n    {\n      label: 'Day',\n      value: 'timeGridDay',\n      icon: ViewDayIcon\n    },\n    {\n      label: 'Agenda',\n      value: 'listWeek',\n      icon: ViewAgendaIcon\n    }\n  ];\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Calendar\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Here's what you planned\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            onClick={onEventAdd}\n            variant=\"contained\"\n          >\n            Add event\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <ButtonGroup>\n            <Button onClick={onDatePrev}>Prev</Button>\n            <Button onClick={onDateToday}>Today</Button>\n            <Button onClick={onDateNext}>Next</Button>\n          </ButtonGroup>\n        </Grid>\n        <Hidden smDown>\n          <Grid item>\n            <Typography variant=\"h3\">\n              {moment(date).format('MMMM YYYY')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            {viewOptions.map(viewOption => {\n              const Icon = viewOption.icon;\n\n              return (\n                <Tooltip\n                  key={viewOption.value}\n                  title={viewOption.label}\n                >\n                  <IconButton\n                    color={viewOption.value === view ? 'primary' : 'default'}\n                    onClick={() => onViewChange(viewOption.value)}\n                  >\n                    <Icon />\n                  </IconButton>\n                </Tooltip>\n              );\n            })}\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  date: PropTypes.any.isRequired,\n  onDateNext: PropTypes.func,\n  onDatePrev: PropTypes.func,\n  onDateToday: PropTypes.func,\n  onEventAdd: PropTypes.func,\n  onViewChange: PropTypes.func,\n  view: PropTypes.string.isRequired\n};\n\nexport default Toolbar;\n","import React, { useState, useRef, useEffect } from 'react';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardContent,\n  colors,\n  useTheme,\n  useMediaQuery\n} from '@material-ui/core';\nimport '@fullcalendar/core/main.css';\nimport '@fullcalendar/daygrid/main.css';\nimport '@fullcalendar/timegrid/main.css';\nimport '@fullcalendar/list/main.css';\n\nimport axios from 'utils/axios';\nimport { Page } from 'components';\nimport { AddEditEvent, Toolbar } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    padding: theme.spacing(3),\n    '& .fc-unthemed td': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-widget-header': {\n      backgroundColor: colors.grey[50]\n    },\n    '& .fc-axis': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-time': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-title': {\n      ...theme.typography.body1\n    },\n    '& .fc-list-heading-main': {\n      ...theme.typography.h6\n    },\n    '& .fc-list-heading-alt': {\n      ...theme.typography.h6\n    },\n    '& .fc th': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-day-header': {\n      ...theme.typography.subtitle2,\n      fontWeight: 500,\n      color: theme.palette.text.secondary,\n      padding: theme.spacing(1),\n      backgroundColor: colors.grey[50]\n    },\n    '& .fc-day-top': {\n      ...theme.typography.body2\n    },\n    '& .fc-highlight': {\n      backgroundColor: colors.blueGrey[50]\n    },\n    '& .fc-event': {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n      borderWidth: 2,\n      opacity: 0.9,\n      '& .fc-time': {\n        ...theme.typography.h6,\n        color: 'inherit'\n      },\n      '& .fc-title': {\n        ...theme.typography.body1,\n        color: 'inherit'\n      }\n    },\n    '& .fc-list-empty': {\n      ...theme.typography.subtitle1\n    }\n  },\n  card: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Calendar = () => {\n  const classes = useStyles();\n  const calendarRef = useRef(null);\n  const theme = useTheme();\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n  const [view, setView] = useState(mobileDevice ? 'listWeek' : 'dayGridMonth');\n  const [date, setDate] = useState(moment('2019-07-30 08:00:00').toDate());\n  const [events, setEvents] = useState([]);\n  const [eventModal, setEventModal] = useState({\n    open: false,\n    event: null\n  });\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchEvents = () => {\n      if (mounted) {\n        axios\n          .get('/api/calendar')\n          .then(response => setEvents(response.data.events));\n      }\n    };\n\n    fetchEvents();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const calendarApi = calendarRef.current.getApi();\n    const newView = mobileDevice ? 'listWeek' : 'dayGridMonth';\n\n    calendarApi.changeView(newView);\n    setView(newView);\n  }, [mobileDevice]);\n\n  const handleEventClick = info => {\n    const selected = events.find(event => event.id === info.event.id);\n\n    setEventModal({\n      open: true,\n      event: selected\n    });\n  };\n\n  const handleEventNew = () => {\n    setEventModal({\n      open: true,\n      event: null\n    });\n  };\n\n  const handleEventDelete = event => {\n    setEvents(events => events.filter(e => e.id !== event.id));\n    setEventModal({\n      open: false,\n      event: null\n    });\n  };\n\n  const handleModalClose = () => {\n    setEventModal({\n      open: false,\n      event: null\n    });\n  };\n\n  const handleEventAdd = event => {\n    setEvents(events => [...events, event]);\n    setEventModal({\n      open: false,\n      event: null\n    });\n  };\n\n  const handleEventEdit = event => {\n    setEvents(events => events.map(e => (e.id === event.id ? event : e)));\n    setEventModal({\n      open: false,\n      event: null\n    });\n  };\n\n  const handleDateToday = () => {\n    const calendarApi = calendarRef.current.getApi();\n\n    calendarApi.today();\n    setDate(calendarApi.getDate());\n  };\n\n  const handleViewChange = view => {\n    const calendarApi = calendarRef.current.getApi();\n\n    calendarApi.changeView(view);\n    setView(view);\n  };\n\n  const handleDatePrev = () => {\n    const calendarApi = calendarRef.current.getApi();\n\n    calendarApi.prev();\n    setDate(calendarApi.getDate());\n  };\n\n  const handleDateNext = () => {\n    const calendarApi = calendarRef.current.getApi();\n\n    calendarApi.next();\n    setDate(calendarApi.getDate());\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Calendar\"\n    >\n      <Toolbar\n        date={date}\n        onDateNext={handleDateNext}\n        onDatePrev={handleDatePrev}\n        onDateToday={handleDateToday}\n        onEventAdd={handleEventNew}\n        onViewChange={handleViewChange}\n        view={view}\n      />\n      <Card className={classes.card}>\n        <CardContent>\n          <FullCalendar\n            allDayMaintainDuration\n            defaultDate={date}\n            defaultView={view}\n            droppable\n            editable\n            eventClick={handleEventClick}\n            eventResizableFromStart\n            events={events}\n            header={false}\n            height={800}\n            plugins={[\n              dayGridPlugin,\n              timeGridPlugin,\n              interactionPlugin,\n              listPlugin,\n              timelinePlugin\n            ]}\n            ref={calendarRef}\n            rerenderDelay={10}\n            selectable\n            weekends\n          />\n        </CardContent>\n      </Card>\n      <Modal\n        onClose={handleModalClose}\n        open={eventModal.open}\n      >\n        <AddEditEvent\n          event={eventModal.event}\n          onAdd={handleEventAdd}\n          onCancel={handleModalClose}\n          onDelete={handleEventDelete}\n          onEdit={handleEventEdit}\n        />\n      </Modal>\n    </Page>\n  );\n};\n\nexport default Calendar;\n"],"sourceRoot":""}