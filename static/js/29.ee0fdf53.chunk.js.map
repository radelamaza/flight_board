{"version":3,"sources":["views/ProjectManagementList/components/Header/Header.js","views/ProjectManagementList/components/ProjectCard/ProjectCard.js","views/ProjectManagementList/ProjectManagementList.js"],"names":["useStyles","makeStyles","root","Header","props","className","rest","classes","clsx","Grid","alignItems","container","justify","spacing","item","Typography","component","gutterBottom","variant","Button","color","RouterLink","to","theme","display","flexWrap","marginBottom","content","padding","flexGrow","justifyContent","breakpoints","down","width","paddingBottom","header","maxWidth","flexBasis","avatar","marginRight","stats","actions","ProjectCard","project","statusColors","colors","orange","Canceled","grey","Completed","green","Card","CardContent","Avatar","alt","src","author","getInitials","name","Link","noWrap","title","currency","price","members","moment","start_date","format","end_date","style","status","size","results","marginTop","paginate","ProjectManagementList","useState","rowsPerPage","page","projects","setProjects","useEffect","mounted","axios","get","then","response","data","onFilter","onSearch","length","Math","ceil","map","key","id","pageCount"],"mappings":"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","file":"static/js/29.ee0fdf53.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Projects\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            component={RouterLink}\n            to=\"/projects/create\"\n            variant=\"contained\"\n          >\n            Add project\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  Link,\n  Typography,\n  colors\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    marginBottom: theme.spacing(2)\n  },\n  content: {\n    padding: theme.spacing(2),\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      flexWrap: 'wrap'\n    },\n    '&:last-child': {\n      paddingBottom: theme.spacing(2)\n    }\n  },\n  header: {\n    maxWidth: '100%',\n    width: 240,\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(2),\n      flexBasis: '100%'\n    }\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  stats: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      flexBasis: '50%'\n    }\n  },\n  actions: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      flexBasis: '50%'\n    }\n  }\n}));\n\nconst ProjectCard = props => {\n  const { project, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const statusColors = {\n    'In progress': colors.orange[600],\n    Canceled: colors.grey[600],\n    Completed: colors.green[600]\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <div className={classes.header}>\n          <Avatar\n            alt=\"Author\"\n            className={classes.avatar}\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <div>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              noWrap\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography variant=\"body2\">\n              by{' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"/management/customers/1\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n            </Typography>\n          </div>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">\n            {project.currency}\n            {project.price}\n          </Typography>\n          <Typography variant=\"body2\">Project price</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">{project.members}</Typography>\n          <Typography variant=\"body2\">Team members</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">\n            {moment(project.start_date).format('DD MMMM YYYY')}\n          </Typography>\n          <Typography variant=\"body2\">Project started</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">\n            {moment(project.end_date).format('DD MMMM YYYY')}\n          </Typography>\n          <Typography variant=\"body2\">Project deadline</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography\n            style={{ color: statusColors[project.status] }}\n            variant=\"h6\"\n          >\n            {project.status}\n          </Typography>\n          <Typography variant=\"body2\">Project status</Typography>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            View\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { Page, Paginate, SearchBar } from 'components';\nimport { Header, ProjectCard } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  paginate: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst ProjectManagementList = () => {\n  const classes = useStyles();\n  const [rowsPerPage] = useState(10);\n  const [page] = useState(0);\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProjects = () => {\n      axios.get('/api/projects').then(response => {\n        if (mounted) {\n          setProjects(response.data.projects);\n        }\n      });\n    };\n\n    fetchProjects();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleFilter = () => {};\n  const handleSearch = () => {};\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Management List\"\n    >\n      <Header />\n      <SearchBar\n        onFilter={handleFilter}\n        onSearch={handleSearch}\n      />\n      <div className={classes.results}>\n        <Typography\n          color=\"textSecondary\"\n          gutterBottom\n          variant=\"body2\"\n        >\n          {projects.length} Records found. Page {page + 1} of{' '}\n          {Math.ceil(projects.length / rowsPerPage)}\n        </Typography>\n        {projects.map(project => (\n          <ProjectCard\n            key={project.id}\n            project={project}\n          />\n        ))}\n      </div>\n      <div className={classes.paginate}>\n        <Paginate pageCount={3} />\n      </div>\n    </Page>\n  );\n};\n\nexport default ProjectManagementList;\n"],"sourceRoot":""}