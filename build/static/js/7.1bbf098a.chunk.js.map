{"version":3,"sources":["views/Settings/components/General/components/ProfileDetails/ProfileDetails.js","views/Settings/components/General/components/SuccessSnackbar/SuccessSnackbar.js","views/Settings/components/General/components/GeneralSettings/GeneralSettings.js","views/Settings/components/General/General.js","views/Settings/components/Header/Header.js","views/Settings/components/Notifications/Notifications.js","views/Settings/components/Security/Security.js","views/Settings/components/Subscription/Subscription.js","views/Settings/Settings.js"],"names":["useStyles","makeStyles","theme","root","content","display","alignItems","flexDirection","textAlgin","name","marginTop","spacing","avatar","height","width","removeBotton","ProfileDetails","props","profile","className","rest","classes","Card","clsx","CardContent","Avatar","src","Typography","gutterBottom","variant","firstName","lastName","color","state","country","timezone","CardActions","Button","backgroundColor","colors","green","message","icon","marginRight","SuccessSnackbar","open","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","defaultProps","saveButton","palette","white","GeneralSettings","useState","openSnackbar","setOpenSnackbar","email","phone","isPublic","canHire","values","setValues","handleChange","event","persist","target","type","checked","value","onSubmit","preventDefault","CardHeader","title","Divider","Grid","container","item","md","xs","TextField","fullWidth","helperText","label","onChange","required","select","SelectProps","native","map","key","Switch","edge","General","setProfile","useEffect","mounted","axios","get","then","response","data","lg","xl","Header","component","Notifications","wrap","sm","FormControlLabel","control","Checkbox","defaultChecked","Security","password","confirm","valid","disabled","action","overview","flexWrap","justifyContent","breakpoints","down","product","productImage","details","notice","Subscription","subscription","setSubscription","size","currency","price","alt","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","Link","RouterLink","to","maxWidth","margin","padding","tabs","divider","grey","Settings","match","history","tab","params","find","t","Tabs","push","scrollButtons","Tab"],"mappings":"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","file":"static/js/7.1bbf098a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Avatar,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlgin: 'center'\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  },\n  removeBotton: {\n    width: '100%'\n  }\n}));\n\nconst ProfileDetails = props => {\n  const { profile, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <Avatar\n          className={classes.avatar}\n          src={profile.avatar}\n        />\n        <Typography\n          className={classes.name}\n          gutterBottom\n          variant=\"h3\"\n        >\n          {profile.firstName} {profile.lastName}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {profile.state}, {profile.country}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {profile.timezone}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          className={classes.removeBotton}\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Snackbar, SnackbarContent, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    backgroundColor: colors.green[600]\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst SuccessSnackbar = props => {\n  const { open, onClose } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      autoHideDuration={6000}\n      onClose={onClose}\n      open={open}\n    >\n      <SnackbarContent\n        className={classes.content}\n        message={\n          <span className={classes.message}>\n            <CheckCircleIcon className={classes.icon} />\n            Successfully saved changes!\n          </span>\n        }\n        variant=\"h6\"\n      />\n    </Snackbar>\n  );\n};\n\nSuccessSnackbar.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\n\nSuccessSnackbar.defaultProps = {\n  open: true,\n  onClose: () => {}\n};\n\nexport default SuccessSnackbar;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\n\nimport SuccessSnackbar from '../SuccessSnackbar';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst GeneralSettings = props => {\n  const { profile, className, ...rest } = props;\n\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [values, setValues] = useState({\n    firstName: profile.firstName,\n    lastName: profile.lastName,\n    email: profile.email,\n    phone: profile.phone,\n    state: profile.state,\n    country: profile.country,\n    isPublic: profile.isPublic,\n    canHire: profile.canHire\n  });\n\n  const handleChange = event => {\n    event.persist();\n\n    setValues({\n      ...values,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setOpenSnackbar(true);\n  };\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  const states = ['Alabama', 'New York', 'San Francisco'];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form onSubmit={handleSubmit}>\n        <CardHeader title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={4}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"text\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map(state => (\n                  <option\n                    key={state}\n                    value={state}\n                  >\n                    {state}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography variant=\"h6\">Make Contact Info Public</Typography>\n              <Typography variant=\"body2\">\n                Means that anyone viewing your profile will be able to see your\n                contacts details\n              </Typography>\n              <Switch\n                checked={values.isPublic}\n                color=\"secondary\"\n                edge=\"start\"\n                name=\"isPublic\"\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography variant=\"h6\">Available to hire</Typography>\n              <Typography variant=\"body2\">\n                Toggling this will let your teamates know that you are available\n                for acquireing new projects\n              </Typography>\n              <Switch\n                checked={values.canHire}\n                color=\"secondary\"\n                edge=\"start\"\n                name=\"canHire\"\n                onChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            className={classes.saveButton}\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Changes\n          </Button>\n        </CardActions>\n      </form>\n      <SuccessSnackbar\n        onClose={handleSnackbarClose}\n        open={openSnackbar}\n      />\n    </Card>\n  );\n};\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { ProfileDetails, GeneralSettings } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst General = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProfile = () => {\n      axios.get('/api/account/profile').then(response => {\n        if (mounted) {\n          setProfile(response.data.profile);\n        }\n      });\n    };\n\n    fetchProfile();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <ProfileDetails profile={profile} />\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <GeneralSettings profile={profile} />\n      </Grid>\n    </Grid>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Settings\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        Change account information\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Button,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst Notifications = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Notifications\" />\n      <Divider />\n      <CardContent>\n        <form>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                System\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email alerts\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Text message\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label={\n                  <Fragment>\n                    <Typography variant=\"body1\">Phone calls</Typography>\n                    <Typography variant=\"caption\">\n                      Short voice phone updating you\n                    </Typography>\n                  </Fragment>\n                }\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Push notifications\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.saveButton}\n          variant=\"contained\"\n        >\n          Save changes\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Button,\n  Divider,\n  TextField,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst Security = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const valid = values.password && values.password === values.confirm;\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Change password\" />\n      <Divider />\n      <CardContent>\n        <form>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Security\"\n                name=\"password\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Confirm password\"\n                name=\"confirm\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.confirm}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.saveButton}\n          disabled={!valid}\n          variant=\"contained\"\n        >\n          Save changes\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Typography\n} from '@material-ui/core';\n\nimport axios from 'utils/axios';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  action: {\n    marginRight: 0,\n    marginTop: 0\n  },\n  overview: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  product: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  },\n  notice: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Subscription = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [subscription, setSubscription] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchSubscription = () => {\n      axios.get('/api/account/subscription').then(response => {\n        if (mounted) {\n          setSubscription(response.data.subscription);\n        }\n      });\n    };\n\n    fetchSubscription();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n          >\n            Upgrade plan\n          </Button>\n        }\n        classes={{ action: classes.action }}\n        title=\"Manage your subscription\"\n      />\n      <Divider />\n      <CardContent>\n        <Card>\n          <CardContent className={classes.overview}>\n            <div>\n              <Typography\n                display=\"inline\"\n                variant=\"h4\"\n              >\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography\n                display=\"inline\"\n                variant=\"subtitle1\"\n              >\n                /mo\n              </Typography>\n            </div>\n            <div className={classes.product}>\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src=\"/images/products/product_freelancer.svg\"\n              />\n              <Typography variant=\"overline\">{subscription.name}</Typography>\n            </div>\n          </CardContent>\n          <Divider />\n          <CardContent className={classes.details}>\n            <div>\n              <Typography variant=\"body1\">\n                {subscription.proposalsLeft} proposals left\n              </Typography>\n              <Typography variant=\"body1\">\n                {subscription.templatesLeft} templates\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body1\">\n                {subscription.invitesLeft} invites left\n              </Typography>\n              <Typography variant=\"body1\">\n                {subscription.adsLeft} ads left\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography variant=\"body1\">Analytics dashboard</Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography variant=\"body1\">Email alerts</Typography>\n              )}\n            </div>\n          </CardContent>\n          <Divider />\n        </Card>\n        <Typography\n          className={classes.notice}\n          variant=\"body2\"\n        >\n          The refunds don't work once you have the subscription, but you can\n          always{' '}\n          <Link\n            color=\"secondary\"\n            component={RouterLink}\n            to=\"#\"\n          >\n            Cancel your subscription\n          </Link>\n          .\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\n\nimport { Page } from 'components';\nimport {\n  Header,\n  General,\n  Subscription,\n  Notifications,\n  Security\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Settings = props => {\n  const { match, history } = props;\n  const classes = useStyles();\n  const { tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'general', label: 'General' },\n    { value: 'subscription', label: 'Subscription' },\n    { value: 'notifications', label: 'Notifications' },\n    { value: 'security', label: 'Security' }\n  ];\n\n  if (!tab) {\n    return <Redirect to=\"/settings/general\" />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Header />\n      <Tabs\n        className={classes.tabs}\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        value={tab}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        {tab === 'general' && <General />}\n        {tab === 'subscription' && <Subscription />}\n        {tab === 'notifications' && <Notifications />}\n        {tab === 'security' && <Security />}\n      </div>\n    </Page>\n  );\n};\n\nSettings.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default Settings;\n"],"sourceRoot":""}