{"version":3,"sources":["views/Chat/components/ConversationList/components/ConversationListItem/ConversationListItem.js","views/Chat/components/ConversationList/ConversationList.js","views/Chat/components/ConversationDetails/components/ConversationToolbar/ConversationToolbar.js","views/Chat/components/ConversationDetails/components/ConversationMessage/ConversationMessage.js","views/Chat/components/ConversationDetails/components/ConversationMessages/ConversationMessages.js","views/Chat/components/ConversationDetails/components/ConversationForm/ConversationForm.js","views/Chat/components/ConversationDetails/ConversationDetails.js","views/Chat/components/ConversationPlaceholder/ConversationPlaceholder.js","views/Chat/Chat.js"],"names":["useStyles","makeStyles","theme","active","boxShadow","palette","primary","main","backgroundColor","colors","grey","avatar","height","width","details","marginLeft","spacing","display","flexDirection","alignItems","unread","marginTop","padding","minWidth","ConversationListItem","props","conversation","className","rest","classes","lastMessage","messages","length","ListItem","button","clsx","component","RouterLink","to","id","ListItemAvatar","Avatar","alt","src","otherUser","ListItemText","name","primaryTypographyProps","noWrap","variant","secondary","sender","content","secondaryTypographyProps","Typography","moment","created_at","isSame","format","fromNow","color","red","shape","root","white","searchInput","flexGrow","ConversationList","conversations","selectedConversation","useRouter","match","params","Toolbar","Input","disableUnderline","placeholder","Tooltip","title","IconButton","edge","Divider","List","disablePadding","map","i","divider","key","backButton","marginRight","user","flexShrink","activity","statusBullet","search","flexBasis","breakpoints","down","flex","searchIcon","icon","ConversationToolbar","moreRef","useRef","useState","openMenu","setOpenMenu","size","lastActivity","Paper","elevation","onClick","ref","Menu","anchorEl","current","keepMounted","onClose","open","MenuItem","ListItemIcon","marginBottom","authUser","justifyContent","contrastText","inner","maxWidth","body","text","borderRadius","image","footer","ConversationMessage","message","Link","contentType","time","overflow","maxHeight","ConversationMessages","paper","input","fileInput","ConversationForm","fileInputRef","value","setValue","handleAttach","click","onChange","event","persist","target","type","ConversationDetails","textAlign","margin","ConversationPlaceholder","cursor","transform","openConversion","conversationList","borderRight","conversationDetails","conversationPlaceholder","Chat","router","setConversations","useEffect","mounted","axios","get","then","response","data","find","c"],"mappings":"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","file":"static/js/6.80d78d92.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Typography,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  active: {\n    boxShadow: `inset 4px 0px 0px ${theme.palette.primary.main}`,\n    backgroundColor: colors.grey[50]\n  },\n  avatar: {\n    height: 40,\n    width: 40\n  },\n  details: {\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end'\n  },\n  unread: {\n    marginTop: 2,\n    padding: 2,\n    height: 18,\n    minWidth: 18\n  }\n}));\n\nconst ConversationListItem = props => {\n  const { active, conversation, className, ...rest } = props;\n\n  const classes = useStyles();\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n\n  return (\n    <ListItem\n      {...rest}\n      button\n      className={clsx(\n        {\n          [classes.active]: active\n        },\n        className\n      )}\n      component={RouterLink}\n      to={`/chat/${conversation.id}`}\n    >\n      <ListItemAvatar>\n        <Avatar\n          alt=\"Person\"\n          className={classes.avatar}\n          src={conversation.otherUser.avatar}\n        />\n      </ListItemAvatar>\n      <ListItemText\n        primary={conversation.otherUser.name}\n        primaryTypographyProps={{\n          noWrap: true,\n          variant: 'h6'\n        }}\n        secondary={`${lastMessage.sender.name}: ${lastMessage.content}`}\n        secondaryTypographyProps={{\n          noWrap: true,\n          variant: 'body1'\n        }}\n      />\n      <div className={classes.details}>\n        <Typography\n          noWrap\n          variant=\"body2\"\n        >\n          {moment(lastMessage.created_at).isSame(moment(), 'day')\n            ? moment(lastMessage.created_at).format('LT')\n            : moment(lastMessage.created_at).fromNow()}\n        </Typography>\n        {conversation.unread > 0 && (\n          <Label\n            className={classes.unread}\n            color={colors.red[500]}\n            shape=\"rounded\"\n          >\n            {conversation.unread}\n          </Label>\n        )}\n      </div>\n    </ListItem>\n  );\n};\n\nConversationListItem.propTypes = {\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  conversation: PropTypes.object.isRequired\n};\n\nexport default ConversationListItem;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Toolbar,\n  Input,\n  IconButton,\n  Tooltip,\n  Divider,\n  List\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport useRouter from 'utils/useRouter';\nimport { ConversationListItem } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.white\n  },\n  searchInput: {\n    flexGrow: 1\n  }\n}));\n\nconst ConversationList = props => {\n  const { conversations, className, ...rest } = props;\n\n  const classes = useStyles();\n  const router = useRouter();\n  const selectedConversation = router.match.params.id;\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Toolbar>\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search contacts\"\n        />\n        <Tooltip title=\"Search\">\n          <IconButton edge=\"end\">\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n      <Divider />\n      <List disablePadding>\n        {conversations.map((conversation, i) => (\n          <ConversationListItem\n            active={conversation.id === selectedConversation}\n            conversation={conversation}\n            divider={i < conversations.length - 1}\n            key={conversation.id}\n          />\n        ))}\n      </List>\n    </div>\n  );\n};\n\nConversationList.propTypes = {\n  className: PropTypes.string,\n  conversations: PropTypes.array.isRequired\n};\n\nexport default ConversationList;\n","import React, { Fragment, useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  IconButton,\n  Input,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Paper,\n  Toolbar,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport SearchIcon from '@material-ui/icons/Search';\nimport BlockIcon from '@material-ui/icons/Block';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOffOutlined';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nimport { StatusBullet } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.white\n  },\n  backButton: {\n    marginRight: theme.spacing(2),\n    '@media (min-width: 864px)': {\n      display: 'none'\n    }\n  },\n  user: {\n    flexShrink: 0,\n    flexGrow: 1\n  },\n  activity: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statusBullet: {\n    marginRight: theme.spacing(1)\n  },\n  search: {\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center',\n    flexBasis: 300,\n    marginLeft: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      flex: '1 1 auto'\n    }\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  }\n}));\n\nconst ConversationToolbar = props => {\n  const { conversation, className, ...rest } = props;\n\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <Toolbar\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Tooltip title=\"Back\">\n        <IconButton\n          className={classes.backButton}\n          component={RouterLink}\n          edge=\"start\"\n          to=\"/chat\"\n        >\n          <KeyboardBackspaceIcon />\n        </IconButton>\n      </Tooltip>\n      <div className={classes.user}>\n        <Typography variant=\"h6\">{conversation.otherUser.name}</Typography>\n        <div className={classes.activity}>\n          {conversation.otherUser.active ? (\n            <Fragment>\n              <StatusBullet\n                className={classes.statusBullet}\n                color=\"success\"\n                size=\"small\"\n              />\n              <Typography variant=\"body2\">Active now</Typography>\n            </Fragment>\n          ) : (\n            <Typography variant=\"body2\">\n              Active {moment(conversation.otherUser.lastActivity).fromNow()}\n            </Typography>\n          )}\n        </div>\n      </div>\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search email\"\n        />\n      </Paper>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        keepMounted\n        onClose={handleMenuClose}\n        open={openMenu}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <BlockIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Block user\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete conversation\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive conversation\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <NotificationsOffIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Mute notifications\" />\n        </MenuItem>\n      </Menu>\n    </Toolbar>\n  );\n};\n\nConversationToolbar.propTypes = {\n  className: PropTypes.string,\n  conversation: PropTypes.object.isRequired\n};\n\nexport default ConversationToolbar;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Link, Avatar, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(2)\n  },\n  authUser: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    '& $body': {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    }\n  },\n  inner: {\n    display: 'flex',\n    maxWidth: 500\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  body: {\n    backgroundColor: colors.grey[100],\n    color: theme.palette.text.primary,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1, 2)\n  },\n  content: {\n    marginTop: theme.spacing(1)\n  },\n  image: {\n    marginTop: theme.spacing(2),\n    height: 'auto',\n    width: 380,\n    maxWidth: '100%'\n  },\n  footer: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst ConversationMessage = props => {\n  const { message, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(\n        classes.root,\n        {\n          [classes.authUser]: message.sender.authUser\n        },\n        className\n      )}\n    >\n      <div className={classes.inner}>\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={message.sender.avatar}\n          to=\"/profile/1/timeline\"\n        />\n        <div>\n          <div className={classes.body}>\n            <div>\n              <Link\n                color=\"inherit\"\n                component={RouterLink}\n                to=\"/profile/1/timeline\"\n                variant=\"h6\"\n              >\n                {message.sender.authUser ? 'Me' : message.sender.name}\n              </Link>\n            </div>\n            <div className={classes.content}>\n              {message.contentType === 'image' ? (\n                <img\n                  alt=\"Attachment\"\n                  className={classes.image}\n                  src={message.content}\n                />\n              ) : (\n                <Typography\n                  color=\"inherit\"\n                  variant=\"body1\"\n                >\n                  {message.content}\n                </Typography>\n              )}\n            </div>\n          </div>\n          <div className={classes.footer}>\n            <Typography\n              className={classes.time}\n              variant=\"body2\"\n            >\n              {moment(message.created_at).fromNow()}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nConversationMessage.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.object.isRequired\n};\n\nexport default ConversationMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ConversationMessage from '../ConversationMessage';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    maxHeight: '100%'\n  },\n  inner: {\n    padding: theme.spacing(2)\n  }\n}));\n\nconst ConversationMessages = props => {\n  const { messages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <PerfectScrollbar>\n        <div className={classes.inner}>\n          {messages.map(message => {\n            return (\n              <ConversationMessage\n                key={message.id}\n                message={message} //\n              />\n            );\n          })}\n        </div>\n      </PerfectScrollbar>\n    </div>\n  );\n};\n\nConversationMessages.propTypes = {\n  className: PropTypes.string,\n  messages: PropTypes.array.isRequired\n};\n\nexport default ConversationMessages;\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1, 2)\n  },\n  paper: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5, 2)\n  },\n  input: {\n    width: '100%'\n  },\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst ConversationForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const fileInputRef = useRef(null);\n\n  const [value, setValue] = useState('');\n\n  const sender = {\n    avatar: '/images/avatars/avatar_11.png'\n  };\n\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={sender.avatar}\n      />\n      <Paper\n        className={classes.paper}\n        elevation={1}\n      >\n        <Input\n          className={classes.input}\n          disableUnderline\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n          <SendIcon />\n        </IconButton>\n      </Tooltip>\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Attach photo\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AddPhotoIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Attach file\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AttachFileIcon />\n        </IconButton>\n      </Tooltip>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n};\n\nConversationForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ConversationForm;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider } from '@material-ui/core';\n\nimport {\n  ConversationToolbar,\n  ConversationMessages,\n  ConversationForm\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.white\n  }\n}));\n\nconst ConversationDetails = props => {\n  const { conversation, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <ConversationToolbar conversation={conversation} />\n      <Divider />\n      <ConversationMessages messages={conversation.messages} />\n      <Divider />\n      <ConversationForm />\n    </div>\n  );\n};\n\nConversationDetails.propTypes = {\n  className: PropTypes.string,\n  conversation: PropTypes.object.isRequired\n};\n\nexport default ConversationDetails;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inner: {\n    textAlign: 'center'\n  },\n  image: {\n    maxWidth: 400\n  },\n  title: {\n    margin: theme.spacing(4, 0, 1, 0)\n  }\n}));\n\nconst ConversationPlaceholder = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.inner}>\n        <img\n          alt=\"Select conversation\"\n          className={classes.image}\n          src=\"/images/undraw_work_chat_erdt.svg\"\n        />\n        <Typography\n          className={classes.title}\n          variant=\"h4\"\n        >\n          Select conversation to display\n        </Typography>\n        <Typography variant=\"subtitle1\">\n          To start a conversation just click the message button from a person\n          profile\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nConversationPlaceholder.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ConversationPlaceholder;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport useRouter from 'utils/useRouter';\nimport { Page } from 'components';\nimport {\n  ConversationList,\n  ConversationDetails,\n  ConversationPlaceholder\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    cursor: 'pointer',\n    display: 'flex',\n    overflow: 'hidden',\n    '@media (max-width: 863px)': {\n      '& $conversationList, & $conversationDetails': {\n        flexBasis: '100%',\n        width: '100%',\n        maxWidth: 'none',\n        flexShrink: '0',\n        transform: 'translateX(0)'\n      }\n    }\n  },\n  openConversion: {\n    '@media (max-width: 863px)': {\n      '& $conversationList, & $conversationDetails': {\n        transform: 'translateX(-100%)'\n      }\n    }\n  },\n  conversationList: {\n    width: 300,\n    flexBasis: 300,\n    flexShrink: 0,\n    '@media (min-width: 864px)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  },\n  conversationDetails: {\n    flexGrow: 1\n  },\n  conversationPlaceholder: {\n    flexGrow: 1\n  }\n}));\n\nconst Chat = () => {\n  const classes = useStyles();\n  const router = useRouter();\n  const [conversations, setConversations] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchConversations = () => {\n      axios.get('/api/chat/conversations').then(response => {\n        if (mounted) {\n          setConversations(response.data.conversations);\n        }\n      });\n    };\n\n    fetchConversations();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  let selectedConversation;\n\n  if (router.match.params.id) {\n    selectedConversation = conversations.find(\n      c => c.id === router.match.params.id\n    );\n  }\n\n  return (\n    <Page\n      className={clsx({\n        [classes.root]: true,\n        [classes.openConversion]: selectedConversation\n      })}\n      title=\"Chat\"\n    >\n      <ConversationList\n        className={classes.conversationList}\n        conversations={conversations}\n      />\n      {selectedConversation ? (\n        <ConversationDetails\n          className={classes.conversationDetails}\n          conversation={selectedConversation}\n        />\n      ) : (\n        <ConversationPlaceholder className={classes.conversationPlaceholder} />\n      )}\n    </Page>\n  );\n};\n\nexport default Chat;\n"],"sourceRoot":""}