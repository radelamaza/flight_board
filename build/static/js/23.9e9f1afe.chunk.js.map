{"version":3,"sources":["views/Episodio/components/Header/Header.js","views/Episodio/components/Results/Results.js","views/Episodio/components/EpisodeInfo/EpisodeInfo.js","views/Episodio/components/Actors/Actors.js","views/Episodio/Episodio.js"],"names":["makeStyles","root","useStyles","theme","content","padding","inner","minWidth","nameCell","display","alignItems","avatar","height","width","marginRight","spacing","actions","justifyContent","Results","props","className","episodes","title","rest","classes","clsx","Typography","color","gutterBottom","variant","Card","CardHeader","Divider","CardContent","Table","TableHead","TableRow","TableCell","align","TableBody","console","log","map","episode","hover","key","episode_id","Link","component","RouterLink","to","defaultProps","flexDirection","marginLeft","buttonIcon","UserProfileInfo","style","fontWeight","code","selected","airline","origin","destination","plane","seats","header","paddingBottom","paddingTop","backgroundColor","colors","grey","manageButton","Actors","actors","titleTypographyProps","List","actor","ListItem","disableGutters","ListItemText","primary","name","secondary","age","primaryTypographyProps","results","marginTop","members","flights_socket","io","path","Episodio","match","history","id","params","useState","carga","setCarga","setEpisode","on","arg","i","length","useEffect","emit","Button","onClick","window","back","Grid","container","item","lg","xl","xs","EpisodeInfo","passengers"],"mappings":"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","file":"static/js/23.9e9f1afe.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const handleVolverAtras = () => {\n    window.history.back()\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Customers\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleVolverAtras}\n          >\n            Volver Atr√°s\n          </Button> \n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, episodes, title, ...rest } = props;\n\n  const classes = useStyles();\n\n\n\n \n\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        \n      </Typography>\n      <Card>\n        <CardHeader\n          title={title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell align=\"center\">Episodios</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {console.log(episodes)}{\n                  episodes.map(episode => (\n                    <TableRow\n                      hover\n                      key={episode.episode_id}\n                    >\n                      \n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          \n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to={\"/RDLMovies/episodes/\"+episode.episode_id+\"/\"}\n                              variant=\"h6\"\n                            >\n                              {\"E\"+episode.episode+\" \"+episode.title}\n                            </Link>\n                          </div>\n                        </div>\n                      </TableCell>\n                      \n                      \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  episodes: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  episodes: []\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    Divider,\n    Table,\n    TableBody,\n    TableRow,\n    TableCell,\n    Typography,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n        padding: 0,\n    },\n    actions: {\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        '& > * + *': {\n            marginLeft: 0,\n        },\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst UserProfileInfo = (props) => {\n    const { className, episode, ...rest } = props;\n    const classes = useStyles();\n    \n\n    \n\n    \n\n    return (\n        <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader title='Informaci√≥n Del Vuelo' />\n            <Divider />\n            <CardContent className={classes.content}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                {' '}\n                                <Typography style={{ fontWeight: 'bold' }}>\n                                    {' '}\n                                    Code\n                                </Typography>{' '}\n                            </TableCell>\n                            <TableCell>\n                                <div>{episode.code}</div>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow selected>\n                            <TableCell>\n                                {' '}\n                                <Typography style={{ fontWeight: 'bold' }}>\n                                    {' '}\n                                    Airline\n                                </Typography>{' '}\n                            </TableCell>\n                            <TableCell>\n                                <div>{episode.airline}</div>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow >\n                            <TableCell>\n                                <Typography style={{ fontWeight: 'bold' }}>\n                                    {' '}\n                                    Origin\n                                </Typography>\n                            </TableCell>\n                            <TableCell>\n                                {episode.origin}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow selected>\n                            <TableCell>\n                                {' '}\n                                <Typography style={{ fontWeight: 'bold' }}>\n                                    {' '}\n                                    Destination\n                                </Typography>{' '}\n                            </TableCell>\n                            <TableCell>\n                                <div>{episode.destination}</div>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow >\n                            <TableCell>\n                                <Typography style={{ fontWeight: 'bold' }}>\n                                    {' '}\n                                    Plane\n                                </Typography>\n                            </TableCell>\n                            <TableCell>{episode.plane}</TableCell>\n                        </TableRow>\n                        <TableRow selected>\n                            <TableCell>\n                                <Typography style={{ fontWeight: 'bold' }}>\n                                    {' '}\n                                    Seats\n                                </Typography>\n                            </TableCell>\n                            <TableCell>{episode.seats}</TableCell>\n                        </TableRow>\n                        \n                    </TableBody>\n                </Table>\n            </CardContent>\n        </Card>\n    );\n};\n\nUserProfileInfo.propTypes = {\n    className: PropTypes.string,\n    order: PropTypes.object.isRequired,\n};\n\nexport default UserProfileInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Avatar,\n  Button,\n  Card,\n  Link,\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  colors\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { RecentActorsSharp } from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  },\n  actions: {\n    backgroundColor: colors.grey[50]\n  },\n  manageButton: {\n    width: '100%'\n  }\n}));\n\nconst Actors = props => {\n  const { actors, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        className={classes.header}\n        title=\"Passengers\"\n        titleTypographyProps={{\n          variant: 'overline'\n        }}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          {actors.map(actor => (\n            <ListItem\n              disableGutters\n            >\n              \n              \n              <ListItemText\n                primary={actor.name}\n                secondary={actor.age+' a√±os'}\n                primaryTypographyProps={{ variant: 'h6' }}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n\nActors.propTypes = {\n  className: PropTypes.string,\n  members: PropTypes.array.isRequired\n};\n\nexport default Actors;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport { Page, SearchBar } from 'components';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport { Header, Actors, EpisodeInfo } from './components';\nimport { Button } from '@material-ui/core';\nimport { io } from 'socket.io-client';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  members: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst flights_socket = io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {\n  path: '/flights'\n});\nconst Episodio = props => {\n  const { match, history ,className, ...rest} = props;\n  const classes = useStyles();\n  const { id } = match.params;\n  const [carga,setCarga] = useState(false)\n  const [booleano, setBooleano] = useState(false);\n  const [episode, setEpisode] = useState();\n  \n  flights_socket.on(\"FLIGHTS\", (arg) => {\n    console.log(arg,'argumento');\n    setCarga(true)\n    let arreglo =[]\n    var i;\n    for (i =0; i<  arg.length; i++) {\n      //console.log(actualData.length)\n      if(arg[i].code==id){\n        setEpisode(arg[i])\n      }\n    }\n    \n  });\n  \n  useEffect(() => {\n    if (!carga) {\n      console.log('pide flights')\n      flights_socket.emit(\"FLIGHTS\");\n      }\n    \n  }, []);\n  \n  const handleVolverAtras = () => {\n    window.history.back()\n  }\n  return (\n    <Page\n      className={classes.root}\n      title={'Prueba'}\n    >\n      <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleVolverAtras}\n          >\n            Volver Atr√°s\n          </Button> \n       \n      <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid\n        item\n        lg={8}\n        xl={9}\n        xs={12}\n      >\n      {episode &&\n      <EpisodeInfo\n      className={classes.results}\n        episode={episode}\n      />}\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        xl={3}\n        xs={12}\n      >{episode &&\n        <Actors\n          className={classes.members}\n          actors={episode.passengers}\n        />}\n      </Grid>\n      </Grid>\n    </Page>\n  );\n};\nEpisodio.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default Episodio;\n"],"sourceRoot":""}