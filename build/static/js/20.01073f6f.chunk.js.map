{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","views/ProjectCreate/components/AboutAuthor/AboutAuthor.js","views/ProjectCreate/components/AboutProject/AboutProject.js","views/ProjectCreate/components/Header/Header.js","views/ProjectCreate/components/Preferences/Preferences.js","views/ProjectCreate/components/ProjectCover/ProjectCover.js","views/ProjectCreate/components/ProjectDetails/ProjectDetails.js","views/ProjectCreate/ProjectCreate.js"],"names":["createSvgIcon","React","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","name","useStyles","makeStyles","option","border","divider","display","alignItems","padding","spacing","maxWidth","marginTop","selectedOption","colors","grey","optionRadio","margin","optionDetails","marginLeft","AboutAuthor","className","rest","useState","selected","setSelected","Card","CardHeader","title","CardContent","value","description","map","key","Radio","onClick","event","handleChange","Typography","gutterBottom","variant","alert","marginBottom","formGroup","fieldGroup","fieldHint","tags","flexGrow","dateField","AboutProject","initialValues","tag","startDate","moment","endDate","add","values","setValues","calendarTrigger","setCalendarTrigger","handleFieldChange","field","persist","handleCalendarOpen","trigger","calendarOpen","Boolean","calendarMinDate","calendarValue","message","TextField","fullWidth","label","onChange","target","Button","addButton","newValues","includes","push","addIcon","Chip","deleteIcon","onDelete","filter","t","handleTagDelete","format","DatePicker","minDate","onAccept","date","onClose","open","style","Header","component","options","flexDirection","Preferences","FormControlLabel","control","defaultChecked","ProjectCover","ProjectDetails","placeholder","width","breakpoints","lg","aboutAuthor","aboutProject","projectCover","projectDetails","preferences","actions","ProjectCreate"],"mappings":"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","file":"static/js/20.01073f6f.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Radio,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: theme.spacing(2),\n    maxWidth: 560,\n    '& + &': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[50]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  optionDetails: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst AboutAuthor = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState('freelancer');\n\n  const handleChange = (event, option) => {\n    setSelected(option.value);\n  };\n\n  const options = [\n    {\n      value: 'freelancer',\n      title: 'I\\'m a freelancer',\n      description: 'I\\'m looking for teamates to join in a personal project'\n    },\n    {\n      value: 'projectOwner',\n      title: 'I’m a project owner',\n      description:\n        'I\\'m looking for freelancer or contractors to take care of my project'\n    },\n    {\n      value: 'affiliate',\n      title: 'I want to join affiliate',\n      description:\n        'I\\'m looking for freelancer or contractors to take care of my project'\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Who are you exactly?\" />\n      <CardContent>\n        {options.map(option => (\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option.value\n            })}\n            key={option.value}\n          >\n            <Radio\n              checked={selected === option.value}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.title}\n              </Typography>\n              <Typography variant=\"body1\">{option.description}</Typography>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutAuthor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutAuthor;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n  Chip,\n  Typography\n} from '@material-ui/core';\nimport { DatePicker } from '@material-ui/pickers';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Alert } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst AboutProject = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n    name: '',\n    tag: '',\n    tags: ['Full-Time', 'ReactJS'],\n    startDate: moment(),\n    endDate: moment().add(1, 'day')\n  };\n\n  const [values, setValues] = useState({ ...initialValues });\n  const [calendarTrigger, setCalendarTrigger] = useState(null);\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n\n  const handleCalendarOpen = trigger => {\n    setCalendarTrigger(trigger);\n  };\n\n  const handleCalendarChange = () => {};\n\n  const handleCalendarAccept = date => {\n    setValues(values => ({\n      ...values,\n      [calendarTrigger]: date\n    }));\n  };\n\n  const handleCalendarClose = () => {\n    setCalendarTrigger(false);\n  };\n\n  const calendarOpen = Boolean(calendarTrigger);\n  const calendarMinDate =\n    calendarTrigger === 'startDate'\n      ? moment()\n      : moment(values.startDate).add(1, 'day');\n  const calendarValue = values[calendarTrigger];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"About this project\" />\n      <CardContent>\n        <form>\n          <Alert\n            className={classes.alert}\n            message=\"Once you choose the project name you can’t change it unless you contact customer support.\"\n          />\n          <div className={classes.formGroup}>\n            <TextField\n              fullWidth\n              label=\"Project Name\"\n              name=\"name\"\n              onChange={event =>\n                handleFieldChange(event, 'name', event.target.value)\n              }\n              value={values.name}\n              variant=\"outlined\"\n            />\n          </div>\n          <div className={classes.formGroup}>\n            <div className={classes.fieldGroup}>\n              <TextField\n                className={classes.flexGrow}\n                label=\"Project Tags\"\n                name=\"tag\"\n                onChange={event =>\n                  handleFieldChange(event, 'tag', event.target.value)\n                }\n                value={values.tag}\n                variant=\"outlined\"\n              />\n              <Button\n                className={classes.addButton}\n                onClick={handleTagAdd}\n                size=\"small\"\n              >\n                <AddIcon className={classes.addIcon} />\n                Add\n              </Button>\n            </div>\n            <Typography\n              className={classes.fieldHint}\n              variant=\"body2\"\n            >\n              Tags will be colored depending the technology if the system\n              recognises.\n            </Typography>\n            <div className={classes.tags}>\n              {values.tags.map(tag => (\n                <Chip\n                  deleteIcon={<CloseIcon />}\n                  key={tag}\n                  label={tag}\n                  onDelete={() => handleTagDelete(tag)}\n                />\n              ))}\n            </div>\n          </div>\n          <div className={classes.formGroup}>\n            <div className={classes.fieldGroup}>\n              <TextField\n                className={classes.dateField}\n                label=\"Start Date\"\n                name=\"startDate\"\n                onClick={() => handleCalendarOpen('startDate')}\n                value={moment(values.startDate).format('DD/MM/YYYY')}\n                variant=\"outlined\"\n              />\n              <TextField\n                className={classes.dateField}\n                label=\"End Date\"\n                name=\"endDate\"\n                onClick={() => handleCalendarOpen('endDate')}\n                value={moment(values.endDate).format('DD/MM/YYYY')}\n                variant=\"outlined\"\n              />\n            </div>\n          </div>\n        </form>\n      </CardContent>\n      <DatePicker\n        minDate={calendarMinDate}\n        onAccept={handleCalendarAccept}\n        onChange={handleCalendarChange}\n        onClose={handleCalendarClose}\n        open={calendarOpen}\n        style={{ display: 'none' }} // Temporal fix to hide the input element\n        value={calendarValue}\n        variant=\"dialog\"\n      />\n    </Card>\n  );\n};\n\nAboutProject.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutProject;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        New Project\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        Apply for listing project\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  options: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Preferences = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Preferences\" />\n      <CardContent>\n        <Typography\n          gutterBottom\n          variant=\"h6\"\n        >\n          Privacy\n        </Typography>\n        <Typography variant=\"body2\">\n          You will recieve emails in your business email address\n        </Typography>\n        <div className={classes.options}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                defaultChecked //\n              />\n            }\n            label=\"Allow teamates invite others\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                defaultChecked //\n              />\n            }\n            label=\"Private Project\"\n          />\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nPreferences.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Preferences;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\nimport { FilesDropzone } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProjectCover = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Project cover\" />\n      <CardContent>\n        <FilesDropzone />\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectCover.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProjectCover;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\nimport { RichEditor } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProjectDetails = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Project details\" />\n      <CardContent>\n        <RichEditor placeholder=\"Say something about the product...\" />\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProjectDetails;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { Page } from 'components';\nimport {\n  Header,\n  AboutAuthor,\n  AboutProject,\n  Preferences,\n  ProjectCover,\n  ProjectDetails\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3, 3, 6, 3)\n  },\n  aboutAuthor: {\n    marginTop: theme.spacing(3)\n  },\n  aboutProject: {\n    marginTop: theme.spacing(3)\n  },\n  projectCover: {\n    marginTop: theme.spacing(3)\n  },\n  projectDetails: {\n    marginTop: theme.spacing(3)\n  },\n  preferences: {\n    marginTop: theme.spacing(3)\n  },\n  actions: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst ProjectCreate = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Create\"\n    >\n      <Header />\n      <AboutAuthor className={classes.aboutAuthor} />\n      <AboutProject className={classes.aboutProject} />\n      <ProjectCover className={classes.projectCover} />\n      <ProjectDetails className={classes.projectDetails} />\n      <Preferences className={classes.preferences} />\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Create project\n        </Button>\n      </div>\n    </Page>\n  );\n};\n\nexport default ProjectCreate;\n"],"sourceRoot":""}